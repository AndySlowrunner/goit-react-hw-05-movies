{"version":3,"file":"static/js/681.89a315e5.chunk.js","mappings":"8LAoCA,UAhCgB,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GACVO,MAAK,SAACC,GAEHJ,EADmBI,EAEtB,IACAC,OAAM,SAAAC,GACHC,QAAQD,MAAM,wMAAyCA,EAC1D,GAER,GAAE,CAACV,KAGA,yBACKG,EAAQS,SAAWT,EAAQS,QAAQC,OAAS,GACzC,wBACKV,EAAQS,QAAQE,KAAI,SAAAC,GAAM,OACvB,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFNF,EAAOf,GADO,OAM9B,sEAIhB,C,+LC/BDkB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,CACXC,QAHY,mCAIZC,SAAU,WAGDC,EAAgB,mCAAG,6GAGDJ,EAAAA,EAAAA,IAAU,mBAAoB,CAACC,OAAAA,IAH9B,cAGlBX,EAHkB,yBAIjBA,EAASe,MAJQ,sCAOxBZ,QAAQD,MAAM,0NAAd,MAPwB,8DAAH,qDAYhBc,EAAc,mCAAG,WAAMxB,GAAN,gGAGCkB,EAAAA,EAAAA,IAAA,gBAAmBlB,GAAM,CAACmB,OAAAA,IAH3B,cAGhBX,EAHgB,yBAIfA,EAASe,MAJM,sCAOtBZ,QAAQD,MAAM,mMAAd,MAPsB,8DAAH,sDAYde,EAAc,mCAAG,WAAMzB,GAAN,gGAGCkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,YAAiC,CAACmB,OAAAA,IAHnC,cAGhBX,EAHgB,yBAIfA,EAASe,MAJM,sCAOtBZ,QAAQD,MAAM,wMAAd,MAPsB,8DAAH,sDAYdJ,EAAc,mCAAG,WAAMN,GAAN,gGAGCkB,EAAAA,EAAAA,IAAA,gBAAmBlB,EAAnB,mBAAwC,CAACmB,OAAAA,IAH1C,cAGhBX,EAHgB,yBAIfA,EAASe,MAJM,sCAOtBZ,QAAQD,MAAM,yKAAd,MAPsB,8DAAH,sDAYdgB,EAAiB,mCAAG,WAAMC,GAAN,gGAGFT,EAAAA,EAAAA,IAAA,6BAAgCS,EAAhC,+BAAoE,CAACR,OAAAA,IAHnE,cAGnBX,EAHmB,yBAIlBA,EAASe,MAJS,sCAOzBZ,QAAQD,MAAM,iJAAd,MAPyB,8DAAH,qD","sources":["components/Reviews.jsx","components/Service.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { getFilmReviews } from \"./Service\"\nimport { useEffect, useState } from \"react\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        getFilmReviews(id)\n            .then((response) => {\n                const newReviews = response;\n                setReviews(newReviews);\n            })\n            .catch(error => {\n                console.error('Помилка при зміні результатів запиту:', error)\n            })\n    \n    }, [id]);    \n    \n    return (\n        <div>\n            {reviews.results && reviews.results.length > 0 ? (\n                <ul>\n                    {reviews.results.map(result => (\n                        <li key={result.id}>\n                            <h3>Author: {result.author}</h3>\n                            <p>{result.content}</p>\n                        </li>))}\n                </ul>\n            ) : (<p>We don't have any reviews for this movie.</p>)\n            }\n        </div>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '233c7f71dccea172993da041a5656481';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst params = {\n    api_key: API_KEY,\n    language: 'en - US'\n}\n\nexport const getTrendingFilms = async() => {\n    \n    try {\n        const response = await axios.get('trending/all/day', {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні трендових фільмів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmDetails = async(id) => {\n    \n    try {\n        const response = await axios.get(`movie/${id}`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні інфо про фільм:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmCredits = async(id) => {\n    \n    try {\n        const response = await axios.get(`movie/${id}/credits`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні списку акторів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmReviews = async(id) => {\n    \n    try {\n        const response = await axios.get(`movie/${id}/reviews?page=1`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні відгуків:\", error);\n        throw error;\n    }\n}\n\nexport const searchFilmByQuery = async(query) => {\n    \n    try {\n        const response = await axios.get(`search/movie?query=${query}&include_adult=false&page=1`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при пошуку фільмів:\", error);\n        throw error;\n    }\n}\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","getFilmReviews","then","response","catch","error","console","results","length","map","result","author","content","axios","params","api_key","language","getTrendingFilms","data","getFilmDetails","getFilmCredits","searchFilmByQuery","query"],"sourceRoot":""}