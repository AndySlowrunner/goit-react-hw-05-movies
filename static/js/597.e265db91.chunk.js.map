{"version":3,"file":"static/js/597.e265db91.chunk.js","mappings":"8LA0CA,UAtCa,WACT,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAQC,EAAR,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GACVO,MAAK,SAACC,GAEHJ,EADiBI,EAEpB,IACAC,OAAM,SAAAC,GACHC,QAAQD,MAAM,sGAAuBA,EACxC,GACR,GAAE,CAACV,KAGA,yBACKG,EAAOS,MACJ,0BACI,wBACKT,EAAOS,KAAKC,KAAI,SAACC,EAAQC,GAAT,OACb,4BACI,gBACIC,IAAKF,EAAOG,aAAP,0CAAyDH,EAAOG,cAAiB,8EACtFC,MAAO,IACPC,IAAI,aAER,wBAAqBL,EAAOM,MAAnBN,EAAOd,KAChB,uCAAec,EAAOO,eAPhBN,EADG,QAazB,MAGf,C,+LCrCDO,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,CACXC,QAHY,mCAIZC,SAAU,WAGDC,EAAgB,mCAAG,6GAGDJ,EAAAA,EAAAA,IAAU,mBAAoB,CAACC,OAAAA,IAH9B,cAGlBf,EAHkB,yBAIjBA,EAASmB,MAJQ,sCAOxBhB,QAAQD,MAAM,0NAAd,MAPwB,8DAAH,qDAYhBkB,EAAc,mCAAG,WAAM5B,GAAN,gGAGCsB,EAAAA,EAAAA,IAAA,gBAAmBtB,GAAM,CAACuB,OAAAA,IAH3B,cAGhBf,EAHgB,yBAIfA,EAASmB,MAJM,sCAOtBhB,QAAQD,MAAM,mMAAd,MAPsB,8DAAH,sDAYdJ,EAAc,mCAAG,WAAMN,GAAN,gGAGCsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,YAAiC,CAACuB,OAAAA,IAHnC,cAGhBf,EAHgB,yBAIfA,EAASmB,MAJM,sCAOtBhB,QAAQD,MAAM,wMAAd,MAPsB,8DAAH,sDAYdmB,EAAc,mCAAG,WAAM7B,GAAN,gGAGCsB,EAAAA,EAAAA,IAAA,gBAAmBtB,EAAnB,mBAAwC,CAACuB,OAAAA,IAH1C,cAGhBf,EAHgB,yBAIfA,EAASmB,MAJM,sCAOtBhB,QAAQD,MAAM,yKAAd,MAPsB,8DAAH,sDAYdoB,EAAiB,mCAAG,WAAMC,GAAN,gGAGFT,EAAAA,EAAAA,IAAA,6BAAgCS,EAAhC,+BAAoE,CAACR,OAAAA,IAHnE,cAGnBf,EAHmB,yBAIlBA,EAASmB,MAJS,sCAOzBhB,QAAQD,MAAM,iJAAd,MAPyB,8DAAH,qD","sources":["components/Cast.jsx","components/Service.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getFilmCredits } from \"./Service\"\nimport { useParams } from \"react-router-dom\";\n\nconst Cast = () => {\n    const { id } = useParams();\n    const [ actors, setActors ] = useState([]);\n\n    useEffect(() => {\n        getFilmCredits(id)\n            .then((response) => {\n                const filmCast = response;\n                setActors(filmCast);\n            })\n            .catch(error => {\n                console.error('Помилка при запиті:', error);\n            })\n    }, [id])\n\n    return (\n        <div>\n            {actors.cast ? (\n                <div>\n                    <ul>\n                        {actors.cast.map((person, index) => (\n                            <div key={index}>\n                                <img\n                                    src={person.profile_path ? `https://image.tmdb.org/t/p/w500/${person.profile_path}` : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'}\n                                    width={120}\n                                    alt=\"profile\"\n                                />\n                                <li key={person.id}>{person.name}</li>\n                                <p>Character: {person.character}</p>\n                            </div>\n                        ))}\n                    </ul>\n                </div>\n            ) : null}\n        </div>\n    )\n}\n\nexport default Cast;","import axios from \"axios\";\n\nconst API_KEY = '233c7f71dccea172993da041a5656481';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst params = {\n    api_key: API_KEY,\n    language: 'en - US'\n}\n\nexport const getTrendingFilms = async() => {\n    \n    try {\n        const response = await axios.get('trending/all/day', {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні трендових фільмів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmDetails = async(id) => {\n    \n    try {\n        const response = await axios.get(`movie/${id}`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні інфо про фільм:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmCredits = async(id) => {\n    \n    try {\n        const response = await axios.get(`movie/${id}/credits`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні списку акторів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmReviews = async(id) => {\n    \n    try {\n        const response = await axios.get(`movie/${id}/reviews?page=1`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні відгуків:\", error);\n        throw error;\n    }\n}\n\nexport const searchFilmByQuery = async(query) => {\n    \n    try {\n        const response = await axios.get(`search/movie?query=${query}&include_adult=false&page=1`, {params});\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при пошуку фільмів:\", error);\n        throw error;\n    }\n}\n"],"names":["id","useParams","useState","actors","setActors","useEffect","getFilmCredits","then","response","catch","error","console","cast","map","person","index","src","profile_path","width","alt","name","character","axios","params","api_key","language","getTrendingFilms","data","getFilmDetails","getFilmReviews","searchFilmByQuery","query"],"sourceRoot":""}