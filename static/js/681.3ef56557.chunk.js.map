{"version":3,"file":"static/js/681.3ef56557.chunk.js","mappings":"8LAoCA,UAhCgB,WACZ,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeN,GACVO,MAAK,SAACC,GAEHJ,EADmBI,EAEtB,IACAC,OAAM,SAAAC,GACHC,QAAQD,MAAM,wMAAyCA,EAC1D,GAER,GAAE,CAACV,KAGA,yBACKG,EAAQS,SAAWT,EAAQS,QAAQC,OAAS,GACzC,wBACKV,EAAQS,QAAQE,KAAI,SAAAC,GAAM,OACvB,2BACI,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFNF,EAAOf,GADO,OAM9B,6LAIhB,C,+LChCKkB,EAAU,mCAEHC,EAAgB,mCAAG,6GAGDC,EAAAA,EAAAA,IAAA,gEAAmEF,EAAnE,oBAHC,cAGlBV,EAHkB,yBAIjBA,EAASa,MAJQ,sCAOxBV,QAAQD,MAAM,0NAAd,MAPwB,8DAAH,qDAYhBY,EAAc,mCAAG,WAAMtB,GAAN,gGAGCoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,oBAA8DkB,EAA9D,oBAHD,cAGhBV,EAHgB,yBAIfA,EAASa,MAJM,sCAOtBV,QAAQD,MAAM,mMAAd,MAPsB,8DAAH,sDAYda,EAAc,mCAAG,WAAMvB,GAAN,gGAGCoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,4BAAsEkB,EAAtE,oBAHD,cAGhBV,EAHgB,yBAIfA,EAASa,MAJM,sCAOtBV,QAAQD,MAAM,wMAAd,MAPsB,8DAAH,sDAYdJ,EAAc,mCAAG,WAAMN,GAAN,gGAGCoB,EAAAA,EAAAA,IAAA,6CAAgDpB,EAAhD,4BAAsEkB,EAAtE,2BAHD,cAGhBV,EAHgB,yBAIfA,EAASa,MAJM,sCAOtBV,QAAQD,MAAM,yKAAd,MAPsB,8DAAH,sDAYdc,EAAiB,mCAAG,WAAMC,GAAN,gGAGFL,EAAAA,EAAAA,IAAA,0DAA6DK,EAA7D,wCAAkGP,EAAlG,2BAHE,cAGnBV,EAHmB,yBAIlBA,EAASa,MAJS,sCAOzBV,QAAQD,MAAM,iJAAd,MAPyB,8DAAH,qD","sources":["components/Reviews.jsx","components/Service.jsx"],"sourcesContent":["import { useParams } from \"react-router-dom\"\nimport { getFilmReviews } from \"./Service\"\nimport { useEffect, useState } from \"react\";\n\nconst Reviews = () => {\n    const { id } = useParams();\n    const [reviews, setReviews] = useState({});\n\n    useEffect(() => {\n        getFilmReviews(id)\n            .then((response) => {\n                const newReviews = response;\n                setReviews(newReviews);\n            })\n            .catch(error => {\n                console.error('Помилка при зміні результатів запиту:', error)\n            })\n    \n    }, [id]);    \n    \n    return (\n        <div>\n            {reviews.results && reviews.results.length > 0 ? (\n                <ul>\n                    {reviews.results.map(result => (\n                        <li key={result.id}>\n                            <h3>Author: {result.author}</h3>\n                            <p>{result.content}</p>\n                        </li>))}\n                </ul>\n            ) : (<p>На даний момент відгуків немає</p>)\n            }\n        </div>\n    )\n}\n\nexport default Reviews;","import axios from \"axios\";\n\nconst API_KEY = '233c7f71dccea172993da041a5656481';\n\nexport const getTrendingFilms = async() => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні трендових фільмів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmDetails = async(id) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні інфо про фільм:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmCredits = async(id) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні списку акторів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmReviews = async(id) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні відгуків:\", error);\n        throw error;\n    }\n}\n\nexport const searchFilmByQuery = async(query) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при пошуку фільмів:\", error);\n        throw error;\n    }\n}\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","getFilmReviews","then","response","catch","error","console","results","length","map","result","author","content","API_KEY","getTrendingFilms","axios","data","getFilmDetails","getFilmCredits","searchFilmByQuery","query"],"sourceRoot":""}