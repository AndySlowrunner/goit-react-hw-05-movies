{"version":3,"file":"static/js/705.f468fcb7.chunk.js","mappings":"qMAGaA,GAAOC,E,OAAAA,IAAOC,EAAAA,GAAPD,CAAH,oD,SCAJE,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OACIF,EAAMG,OAAS,GACX,0BACI,wBACKH,EAAMI,KAAI,SAAAC,GAAI,OACX,yBACI,SAACT,EAAD,CAAMU,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAACC,KAAMR,GAA9C,SAA0DI,EAAKK,OAASL,EAAKM,QADxEN,EAAKE,GADH,QAMb,IACrB,C,+LCfKK,EAAU,mCAEHC,EAAgB,mCAAG,6GAGDC,EAAAA,EAAAA,IAAA,gEAAmEF,EAAnE,oBAHC,cAGlBG,EAHkB,yBAIjBA,EAASC,MAJQ,sCAOxBC,QAAQC,MAAM,0NAAd,MAPwB,8DAAH,qDAYhBC,EAAc,mCAAG,WAAMZ,GAAN,gGAGCO,EAAAA,EAAAA,IAAA,6CAAgDP,EAAhD,oBAA8DK,EAA9D,oBAHD,cAGhBG,EAHgB,yBAIfA,EAASC,MAJM,sCAOtBC,QAAQC,MAAM,mMAAd,MAPsB,8DAAH,sDAYdE,EAAc,mCAAG,WAAMb,GAAN,gGAGCO,EAAAA,EAAAA,IAAA,6CAAgDP,EAAhD,4BAAsEK,EAAtE,oBAHD,cAGhBG,EAHgB,yBAIfA,EAASC,MAJM,sCAOtBC,QAAQC,MAAM,wMAAd,MAPsB,8DAAH,sDAYdG,EAAc,mCAAG,WAAMd,GAAN,gGAGCO,EAAAA,EAAAA,IAAA,6CAAgDP,EAAhD,4BAAsEK,EAAtE,2BAHD,cAGhBG,EAHgB,yBAIfA,EAASC,MAJM,sCAOtBC,QAAQC,MAAM,yKAAd,MAPsB,8DAAH,sDAYdI,EAAiB,mCAAG,WAAMC,GAAN,gGAGFT,EAAAA,EAAAA,IAAA,0DAA6DS,EAA7D,wCAAkGX,EAAlG,2BAHE,cAGnBG,EAHmB,yBAIlBA,EAASC,MAJS,sCAOzBC,QAAQC,MAAM,iJAAd,MAPyB,8DAAH,qD,0GClDjBM,EAAa,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAExB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OACI,kBAAMH,SAPW,SAACI,GAClBA,EAAEC,iBACFL,EAASE,GACTE,EAAEE,OAAOC,OACZ,EAGG,WACI,kBACIC,KAAK,OACLN,MAAOA,EACPO,SAAU,SAACL,GAAD,OAAOD,EAASC,EAAEM,cAAcR,MAAhC,KAEd,mBAAQM,KAAK,SAAb,sBAGX,E,iBCiBD,EAjCe,WAAO,IAAD,EACjB,GAAwCG,EAAAA,EAAAA,IAAgB,CAAC,GAAzD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA0BZ,EAAAA,EAAAA,UAAS,IAAnC,eAAO1B,EAAP,KAAcuC,EAAd,KACMC,EAAS,UAAGH,EAAaI,IAAI,gBAApB,QAAgC,GAqB/C,OAbAC,EAAAA,EAAAA,YAAU,WACY,KAAdF,IACAlB,EAAAA,EAAAA,IAAkBkB,GACbG,MAAK,SAAA5B,GACF,IAAM6B,EAAW7B,EAAS8B,QAC1BN,EAASK,EACZ,IACAE,OAAM,SAAA5B,GACHD,QAAQC,MAAM,uMAAwCA,EACzD,GAEZ,GAAE,CAACsB,KAGA,6BACI,SAAChB,EAAD,CACIC,SArBS,SAACE,GAElBW,EAD4B,KAAVX,EAAe,CAAEJ,MAAOI,GAAU,CAAC,EAExD,IAmBQ3B,EAAMG,OAAS,IAAK,SAACJ,EAAA,EAAD,CAAWC,MAAOA,MAGlD,C","sources":["components/FilmList.styled.js","components/FilmsList.jsx","components/Service.jsx","components/SearchFild.jsx","pages/Movies.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const Link = styled(NavLink)`\n    text-decoration: none;\n`","import { useLocation } from \"react-router-dom\"\nimport { Link } from \"./FilmList.styled\";\n\nexport const FilmsList = ({ films }) => {\n    const location = useLocation();\n\n    return (\n        films.length > 0 ? (\n            <div>\n                <ul>\n                    {films.map(film => (\n                        <li key={film.id}>\n                            <Link to={`/movies/${film.id}`} state={{from: location}}>{film.title || film.name}</Link>\n                        </li>\n                    ))}\n                </ul>\n            </div>) : null)\n}","import axios from \"axios\";\n\nconst API_KEY = '233c7f71dccea172993da041a5656481';\n\nexport const getTrendingFilms = async() => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні трендових фільмів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmDetails = async(id) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні інфо про фільм:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmCredits = async(id) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні списку акторів:\", error);\n        throw error;\n    }\n}\n\nexport const getFilmReviews = async(id) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при отриманні відгуків:\", error);\n        throw error;\n    }\n}\n\nexport const searchFilmByQuery = async(query) => {\n    \n    try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&api_key=${API_KEY}&language=en-US&page=1`);\n        return response.data;\n    } catch (error) {\n\n        console.error(\"Помилка при пошуку фільмів:\", error);\n        throw error;\n    }\n}\n","import { useState } from \"react\"\n\nexport const SearchFild = ({onSubmit}) => {\n\n    const [value, setValue] = useState('');\n    \n    const handleSubmit = (e) => {\n        e.preventDefault();\n        onSubmit(value);\n        e.target.reset();\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={value}\n                onChange={(e) => setValue(e.currentTarget.value)}\n            />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { FilmsList } from \"components/FilmsList\";\nimport { SearchFild } from \"components/SearchFild\"\nimport { searchFilmByQuery } from \"components/Service\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\"\n\nconst Movies = () => {\n    const [searchParams, setSearchParams] = useSearchParams({});\n    const [films, setFilms] = useState([]);\n    const userQuery = searchParams.get('query') ?? '';\n\n    \n    const handleSubmit = (value) => {\n        const newParams = value !== '' ? { query: value } : {};\n        setSearchParams(newParams);\n    };\n\n    useEffect(() => {\n        if (userQuery !== '') {\n            searchFilmByQuery(userQuery)\n                .then(response => {\n                    const newFilms = response.results;\n                    setFilms(newFilms);\n                })\n                .catch(error => {\n                    console.error('Помилка при отриманні масиву фільмів', error)\n                });\n        }\n    }, [userQuery]);\n    \n    return (\n        <main>\n            <SearchFild\n                onSubmit={handleSubmit} />\n            {films.length > 0 && <FilmsList films={films} />}\n        </main>\n    )\n}\n\nexport default Movies;"],"names":["Link","styled","NavLink","FilmsList","films","location","useLocation","length","map","film","to","id","state","from","title","name","API_KEY","getTrendingFilms","axios","response","data","console","error","getFilmDetails","getFilmCredits","getFilmReviews","searchFilmByQuery","query","SearchFild","onSubmit","useState","value","setValue","e","preventDefault","target","reset","type","onChange","currentTarget","useSearchParams","searchParams","setSearchParams","setFilms","userQuery","get","useEffect","then","newFilms","results","catch"],"sourceRoot":""}